# bot.py
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage

import settings
from database import init_db

from handlers import register, booking, booking_with_transfers
from handlers.view_orders import register_order_handlers

bot = Bot(token=settings.BOT_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
register.register_handlers(dp)
booking.register_booking_handlers(dp)
booking_with_transfers.register_transfer_handlers(dp)
register_order_handlers(dp)

# –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ
async def on_startup(dp):
    await init_db()

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞.\n–ï—Å–ª–∏ –≤—ã –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞–∂–º–∏—Ç–µ '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'",
        reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    )

if __name__ == "__main__":
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)
